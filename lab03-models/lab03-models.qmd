---
title: "实验03：函数形式"
subtitle: "食物支出案例"
author: "任课教师：胡华平"
date: "`r params$hw_start`"

execute: 
  echo: false

params:
  hand_out:
    value:
      lab_num: 3
      name_chn: 函数形式
      name_eng: models
  hw_start: '2023-11-27'
  hw_end: '2023-12-04'
  topic: 'models'
  class: 'under'
  id_year: '2021'
  teach_year: '2023'
  term: '2023'
  course_id:
    value:
      academic: '6132001'
      major: 'pd7134001'
      under: '3133101'

format:
  docx:
    #output-file: homework02-test.docx
    number-sections: true
    highlight-style: github
    reference-doc: ../template/template-word-lab-exrecise.docx
---


```{r}
#| label: setup-pkg
#| echo: false
#| warning: false
library(here)
source(here("R/set-global-only.R"))
source(here("R/load-pkg-homework.R"))

```

```{r}
#| echo: false
#| warning: false

# some function to get exercise elements
source(here("R/fun_exercise_element.R"), encoding = "UTF-8")
# Generate lab information with parameters
source(here("R/_pre-lab-pars.R"), encoding = "UTF-8")
```


<br>

学生姓名：_________；学生学号：___________；专业班级：__________

<br>


# 作业提交



**实验发布时间**：`r start_line`

**提交截止时间**：`r end_line`

**实验提交材料**：

（1）根据实验要求，完成Office Word电子文档一份`.docx文件`（注意不能是wps文档），提交前请将文件命名为下述格式：`r  name_file(type='word', num= lab.num, ext = 'docx')`。

（2）根据实验要求，完成EViews相关操作，保存并提交1份EViews工作文件`.wfl文件`，提交前请将文件命名为下述格式：`r  name_file(type='eviews', num= lab.num, ext='wfl')`。

（3）根据实验要求，完成EViews相关操作，保存并提交1份EViews编程代码文件`.prg文件`，提交前请将文件命名为下述格式：`r  name_file(type='code', num= lab.num, ext='prg')`。


**实验提交方式**：

- 登陆西北农林科技大学[在线教育综合平台](https://eol.nwafu.edu.cn/meol/index.do) ->> 进入课程《计量经济学》（胡华平主讲，课程编号`r params$course_id$under`） ->> 进入【课程作业】进行作业资料下载和作业提交。

- 请按上述要求命名各个提交文件。 系统提交页面中，务必让每个上传文件之间换行，保持提交页面布局美观！


# 作业提示

## 如何在word中编辑数学公式？

（1）如果使用Office 2003版：“插入” $\Rightarrow$“对象”$\Rightarrow$“microsoft公式3.0”

（2）如使用Office 2007/2010版：“插入”$\Rightarrow$“新公式”

（3）使用独立公式软件`Mathtype`，任何Office版本都可以

a.在`Mathtype`中编写公式$\Rightarrow$ 确定无误后复制公式$\Rightarrow$然后粘贴到word中。
    
b.在`Word`中修改Mathtype形式的公式：$\Rightarrow$ 双击公式则可以打开Mathtype软件，然后按上一步骤操作，修改完成后，点击保存即可。

<br>

<br>

## 模型函数形式及计算参考

考虑到本次实验课内容，EViews操作运算中可能需要计算弹性和斜率，下面 @tbl-calcu 给出理论计算公式，供大家在EViews操作中参照使用。

> **温馨提示**：
（1）$Y$对$X$的斜率的理论表达式为$b=\frac{dY}{dX}$；$Y$对$X$的弹性的理论表达式为$\eta = \frac{dY}{dX}\cdot\frac{X_i}{Y_i}$。
（2）二者的关系为：$\eta=b\cdot\frac{X_i}{Y_i}$。


```{r}
# give the math data
math_matrix<-readxl::read_xlsx(
  path = here("data/lab03-math-model-forms.xlsx"),
  sheet='forms')

```



```{r}
#| label: tbl-calcu
#| tbl-cap: "模型函数形式及斜率和弹性的计算参考"

name_eng <- names(math_matrix)
name_chn <- c("序号",
              "名称","表达式",
              "斜率",
              "点弹性",
              "平均弹性")

math_matrix %>%
  select(all_of(name_eng)) %>%
  rename_all(., ~all_of(name_chn)) %>%
  knitr::kable(
    booktabs = TRUE, 
    align = "c")
```



\newpage

# 作业内容

```{r}
#| warning: false
#| message: false

# read basic ecercise data set
file_path <- "data/Lab3-family-spends-fix.xlsx"
df_base <- openxlsx::read.xlsx(here(file_path)) %>%
  # make sure 
  mutate(obs = 1:nrow(.)) %>%
  select(obs, everything(.))
n <- nrow(df_base)
```


下面 @fig-data-show 给出数据取自1980-1982年间英国家庭支出调查中1519个家庭的家庭食物支出（$foodexp$，作为被解释变量$Y$）和家庭总支出（$totexp$，作为解释变量$X$）。数据只包括住在伦敦市区和市郊有1~2个子女的家庭，样本不包括自我雇佣和退休家庭。

> **温馨提示**：
>（1）作业配套数据请在作业发布平台界面中自行下载。
>（2）每个同学的数据都不一样（但样本数相同$n=`r n`$）。请下载数据表后，按后面作业要求找到自己的数据，并进行Excel预处理（以便导入到Eviews）。


```{r}
#| label: fig-data-show
#| fig-cap: !expr 'glue("英国家庭食物支出的学生实验数据（n={n}）")'

df_base %>%
  DT::datatable(
    options = list(
      pageLength=10,
      dom="tip")
  )
```



# 作业任务

```{r task-counter}
task_counter <- function() {
  i <- 0
  function() {
    i <<- i + 1
    i
  }
}
n_task <- task_counter()


```

## 题目`r n_task()`：工作文件及数据导入

（1）请大家下载本次作业数据文件到本地电脑。

> **温馨提示**：a.文件尽量不要放在电脑桌面，而是保存在自己清楚的文件夹路径下（如"D://econometrics//lab03"）；b.注意下载工具的使用，不是直接打开xlsx文件，而是要下载到本地电脑，然后再打开！

答：此问不用作答，完成指定操作即可！

<br>

（2）打开EViews软件，创建工作文件（WF），命名为`r glue("lab0{lab.num}")`；以及建立工作页（page），命名为`r params$topic`。

答：此问不用作答，完成指定操作即可！

<br>

（3）将工作文件项目保存到本地电脑`.wfl`文件，并命名为“`r  name_file(num= lab.num, type='eviews', ext='wfl')`”的形式。

> **要求**：注意记住保存的文件夹路径，这个文件要提交到作业系统的！！！

答：此问不用作答，完成指定操作并确保正确即可！

<br>

（4）对xlsx数据文件进行清洗处理。

答：此问不用作答，完成指定操作并确保正确即可！

<br>

（4）将清洗处理好后的数据导入到刚才建好的Eviews工作文件中，并在EViews窗口中按如下要求进行变量命名操作：

> **要求**：在EViews窗口中，请将xlsx文件的原变量名`foodexp`和`totexp`，分别重命名为`y_upr`和`x_upr`。

答：此问不用作答，完成指定操作并确保正确即可！

<br>

## 题目`r n_task()`：散点图scatter

考虑到前述7类模型函数形式，我们希望初步分析不同形式的自变量（$X_i,ln(X_i),\frac{1}{X_i}$）与因变量（$Y_i,ln(Y_i)$）之间的散点图形态（共有6种散点图组合关系）。请在EViews中，按如下要求分别绘制它们的散点图。

> **温馨提示**：a.按住键盘键`Ctrl`，然后鼠标依次点选序列对象（series![](../pic/object/Series.png)），则可以根据需要选择多个序列对象，然后鼠标右键可以构造出组对象（group![](../pic/object/Group.png)）；b.鼠标点击序列对象的先后顺序，会影响序列对象在组对象里面的排序关系。c.组对象绘图时，EViews会默认排在前面的序列对象为横轴变量。

> **绘图要求**：a.请在EViews中进行图形的基本美化修改，如轴标题axis title、图例legend、图题title、单位等。

（1/2）请在EViews中绘制$Y_i$（纵轴）对$X_i$（横轴）的散点图。将以上创建的图对象（graph![](../pic/object/Graph.png)）保存并命名为`scatter_2`。并按如下要求对图形样式进行修改和美化。最后将图片复制到如下word空白处！


答：按要求完成操作，并请将做好的图片复制到下处：

<br>

<br>

（3）请在EViews中绘制$ln(Y_i)$（纵轴）对$ln(X_i)$（横轴）的散点图。将以上创建的图对象（graph![](../pic/object/Graph.png)）保存并命名为`scatter_3`。并按如下要求对图形样式进行修改和美化。最后将图片复制到如下word空白处！


答：按要求完成操作，并请将做好的图片复制到下处：

<br>

<br>

（4）请在EViews中绘制$ln(Y_i)$（纵轴）对$X_i$（横轴）的散点图。将以上创建的图对象（graph![](../pic/object/Graph.png)）保存并命名为`scatter_4`。并按如下要求对图形样式进行修改和美化。最后将图片复制到如下word空白处！


答：按要求完成操作，并请将做好的图片复制到下处：

<br>

<br>

（5）请在EViews中绘制$Y_i$（纵轴）对$ln(X_i)$（横轴）的散点图。将以上创建的图对象（graph![](../pic/object/Graph.png)）保存并命名为`scatter_5`。并按如下要求对图形样式进行修改和美化。最后将图片复制到如下word空白处！


答：按要求完成操作，并请将做好的图片复制到下处：

<br>

<br>

（6）请在EViews中绘制$Y_i$（纵轴）对$\frac{1}{X_i}$（横轴）的散点图。将以上创建的图对象（graph![](../pic/object/Graph.png)）保存并命名为`scatter_6`。并按如下要求对图形样式进行修改和美化。最后将图片复制到如下word空白处！


答：按要求完成操作，并请将做好的图片复制到下处：

<br>

<br>

（7）请在EViews中绘制$ln(Y_i)$（纵轴）对$\frac{1}{X_i}$（横轴）的散点图。将以上创建的图对象（graph![](../pic/object/Graph.png)）保存并命名为`scatter_7`。并按如下要求对图形样式进行修改和美化。最后将图片复制到如下word空白处！


答：按要求完成操作，并请将做好的图片复制到下处：

<br>

<br>

## 题目`r n_task()`：不同函数形式的回归

根据研究目标，我们将尝试使用EViews软件对如下7个模型进行回归分析。

$$
\begin{aligned}
Y_i&=\beta_1 + \beta_2X_i+u_i &&\text{(m1)}
\end{aligned}
$$ {#eq-m1}

$$
\begin{aligned}
Y_i&=\beta_2X_i+u_i &&\text{(m2)}
\end{aligned}
$$ {#eq-m2}

$$
\begin{aligned}
ln(Y_i)&=\beta_1  + \beta_2 ln(X_i)+u_i &&\text{(m3)}
\end{aligned}
$$ {#eq-m3}

$$
\begin{aligned}
ln(Y_i)&=\beta_1  + \beta_2 X_i+u_i &&\text{(m4)}
\end{aligned}
$$ {#eq-m4}

$$
\begin{aligned}
Y_i&=\beta_1  + \beta_2 ln(X_i)+u_i &&\text{(m5)}
\end{aligned}
$$ {#eq-m5}


$$
\begin{aligned}
Y_i&=\beta_1 + \beta_2 \frac{1}{X_i}+u_i &&\text{(m6)}
\end{aligned}
$$ {#eq-m6}

$$
\begin{aligned}
ln(Y_i)&=\beta_1 + \beta_2 \frac{1}{X_i}+u_i &&\text{(m7)}
\end{aligned}
$$ {#eq-m7}


请依次完成如下EViews回归分析过程。

> **温馨提示**：
（1）运用Eviews菜单（Quick $\Rightarrow$ Estimate Equation），可以实现对上述模型进行回归分析。
（2）$ln()$变换操作要注意选择对数的底，大家可以直接使用$log_{10}()$，因为大部分统计软件默认都是以10为底的。

（1）构建过经典线性回归模型 @eq-m1 ，利用数据在EViews软件中进行回归分析操作，以方程对象（Equation![](../pic/object/Equation.png)）形式保存上述回归结果，并命名为`eq_m1`。最后截图到下列空白处。
 
答：

<br>

<br>

（2）构建过原点回归模型 @eq-m2 ，利用数据在EViews软件中进行回归分析操作，以方程对象（Equation![](../pic/object/Equation.png)）形式保存上述回归结果，并命名为`eq_m2`。最后截图到下列空白处。
 
答：

<br>

<br>

（3）构建双对数回归模型 @eq-m3 ，利用数据在EViews软件中进行回归分析操作，以方程对象（Equation![](../pic/object/Equation.png)）形式保存上述回归结果，并命名为`eq_m3`。最后截图到下列空白处。
 
答：

<br>

<br>

（4）构建线性到对数回归模型 @eq-m4 ，利用数据在EViews软件中进行回归分析操作，以方程对象（Equation![](../pic/object/Equation.png)）形式保存上述回归结果，并命名为`eq_m4`。最后截图到下列空白处。
 
答：

<br>

<br>

（5）构建对数到线性回归模型 @eq-m5 ，利用数据在EViews软件中进行回归分析操作，以方程对象（Equation![](../pic/object/Equation.png)）形式保存上述回归结果，并命名为`eq_m5`。最后截图到下列空白处。
 
答：

<br>

<br>

（6）构建倒数回归模型 @eq-m6 ，利用数据在EViews软件中进行回归分析操作，以方程对象（Equation![](../pic/object/Equation.png)）形式保存上述回归结果，并命名为`eq_m6`。最后截图到下列空白处。
 
答：

<br>

<br>

（7）构建对数倒数回归模型 @eq-m7 ，利用数据在EViews软件中进行回归分析操作，以方程对象（Equation![](../pic/object/Equation.png)）形式保存上述回归结果，并命名为`eq_m7`。最后截图到下列空白处。
 
答：

<br>

<br>



## 题目`r n_task()`：创建标量（样本均值点和给定数据点）

（1）给定数据点$(X_0,Y_0)=(100,30)$，请分别在EViews中创建标量对象（scalar![](../pic/object/Scalar.png)），保存并分别命名为`x0`和`y0`。

答：此问不用作答，完成指定操作即可！

<br>

（2）根据样本数据点$(X_i,Y_i)$，请分别在EViews中创建标量对象（scalar![](../pic/object/Scalar.png)），保存并分别命名为`x_bar`和`y_bar`。

> **温馨提示**：在EViews命令窗口中，例如运行如下代码`scalar  x_bar=@mean(x_upr)`，可以得到$\bar{X}$的向量对象![](../pic/object/Vector.png)`x_bar`。

答：此问不用作答，完成指定操作即可！

<br>


## 题目`r n_task()`：提取所有方程的回归斜率系数

请在EViews中分别提取前述7个回归方程（scalar![](../pic/object/Scalar.png)）的斜率系数$\hat{\beta}_2$，并依次提取放置到如下的向量对象中。

你需要创建1个$(7 \times 1)$的向量对象（Vector![](../pic/object/Vector.png)），保存并命名为`beta2_hat`。最后请将![](../pic/object/Vector.png)`beta2_hat`的结果值复制/截图到下面空白处。

> **温馨提示**：如何提取EViews方程对象（Equation![](../pic/object/Equation.png)）中的斜率系数？
（a）参考方法：（1个示例）在EViews命令窗口中输入代码`vector(7) beta2_hat(1)=m1.@coefs(2)`。其中：`vector(7)`表示创建1个$(7 \times 1)$的向量对象![](../pic/object/Vector.png)；`beta2_hat(1)`表示新创建的向量对象命名为`beta2_hat`，并给其第一个元素赋值；`m1.@coefs(2)`表示提取方程对象![](../pic/object/Equation.png)`m1`的第2个回归系数。
（b）要注意过原点回归模型 @eq-m2 只有一个回归系数。



答：7个回归方程的斜率系数$\hat{\beta}_2$结果值为（复制或截图![](../pic/object/Vector.png)`beta2_hat`）：

<br>

<br>


## 题目`r n_task()`：计算点斜率

根据前面的EViews回归分析结果，给定数据点$(X_0,Y_0)=(100,30)$，分别计算各模型$Y_i$对$X_i$的点斜率$b_m\quad (m=1,2,\ldots,7)$。

> **温馨提示**：我们可以利用矩阵计算，一次性算出所有的点斜率向量![](../pic/object/Vector.png)$\boldsymbol{b}_{(7\times1)}$。关键在于准确得到两个向量：回归方程的斜率向量$\boldsymbol{{\hat{\beta}}}_{(2,m)}$，以及常数向量$\boldsymbol{c}_m$。根据点斜率计算 @tbl-calcu ，它可以转换为如下的矩阵计算问题。其中$\odot$表示“矩阵要素相乘”（也即对应矩阵元素直接相乘），注意不是“矩阵相乘”！

$$
\begin{alignedat}{3}
&&\boldsymbol{b}_m =
&&\boldsymbol{{\hat{\beta}}}_{(2,m)}\odot &&\boldsymbol{c}_m \\
&&_{(1\times7)} =
&&_{(1\times7)}  \odot &&_{(1\times7)} 
\end{alignedat}
$$


$$
\begin{alignedat}{3}
  \begin{pmatrix}
    b_1\\
    b_2\\
    b_3\\
    b_4\\
    b_5\\
    b_6\\
    b_7
  \end{pmatrix}
=
  \begin{pmatrix}
    \hat{\beta}_{21}\\
    \hat{\beta}_{12}\\
    \hat{\beta}_{23}\\
    \hat{\beta}_{24}\\
    \hat{\beta}_{25}\\
    \hat{\beta}_{26}\\
    \hat{\beta}_{27}
  \end{pmatrix}
 \odot
 \begin{pmatrix}
    c_1\\
    c_2\\
    c_3\\
    c_4\\
    c_5\\
    c_6\\
    c_7
  \end{pmatrix}
  =
  \begin{pmatrix}
    \hat{\beta}_{21}\\
    \hat{\beta}_{12}\\
    \hat{\beta}_{23}\\
    \hat{\beta}_{24}\\
    \hat{\beta}_{25}\\
    \hat{\beta}_{26}\\
    \hat{\beta}_{27}
  \end{pmatrix}
 \odot
 \begin{pmatrix}
    1\\
    1\\
    \frac{Y_0}{X_0}\\
    Y_0\\
    \frac{1}{X_0}\\
    -\frac{1}{X_0^2}\\
    -\frac{Y_0}{X_0^2}
  \end{pmatrix}
= 
\begin{pmatrix}
    \hat{\beta}_{21}\\
    \hat{\beta}_{12}\\
    \hat{\beta}_{23}\frac{Y_0}{X_0}\\
    \hat{\beta}_{24} Y_0\\
    \hat{\beta}_{25}\frac{1}{X_0}\\
    -\hat{\beta}_{26}\frac{1}{X_0^2}\\
    -\hat{\beta}_{27}\frac{Y_0}{X_0^2}
  \end{pmatrix}
\end{alignedat}
$$


请在EViews中计算得到7个模型中$Y_i$对$X_i$的斜率$b_m\quad (m=1,2,\ldots,7)$。请参考计算 @tbl-calcu  。分步骤回答如下问题：

（1）（步骤1）首先，你需要根据给定的数据点$(X_0,Y_0)=(100,30)$，构建1个$(7 \times 1)$的向量对象![](../pic/object/Vector.png)，保存并命名为`c_m`，用于存放计算常数量值（参看计算 @tbl-calcu 和上述提示）。 请将常数向量对象![](../pic/object/Vector.png)`c_m`的结果复制或截图到如下空白处。

> **温馨提示**：在EViews命令窗口中，运行如下代码`vector(7) c_m(1)=1`，可以给$(7 \times 1)$的向量对象![](../pic/object/Vector.png)`c_m`赋值第1个元素值为1。向量其他元素的赋值方法可进行类似操作！

答：

<br>

<br>

（2）（步骤2）：然后，利用矩阵要素相乘的方法（参看计算 @tbl-calcu 和上述提示），构建并计算1个$(7 \times 1)$的向量对象![](../pic/object/Vector.png)，保存并命名为`b_point`，用于存放点斜率的计算量值（参看计算 @tbl-calcu ）。 请将向量对象![](../pic/object/Vector.png)`b_point`的结果复制或截图到如下空白处。

> **温馨提示**：在EViews命令窗口中输入如下代码`vector(7) b_result=@emult(beta2_hat, c_m)`，可以得到最终结果。其中`@emult()`命令表示“矩阵元素相乘”($\odot$)。


答：

<br>

<br>



## 题目`r n_task()`：计算点弹性

根据前面的EViews回归分析结果，给定数据点$(X_0,Y_0)=(100,30)$，分别计算各模型$Y_i$对$X_i$的点弹性$\eta_m \quad (m=1,2,\ldots,7)$。

> **温馨提示**：我们可以利用矩阵计算，一次性算出所有的点斜率向量![](../pic/object/Vector.png)$\boldsymbol{\eta}_{(7\times1)}$。关键在于准确得到两个向量：回归方程的斜率向量$\boldsymbol{{\hat{\beta}}}_{(2,m)}$，以及常数向量$\boldsymbol{g}_m$。根据点斜率计算 @tbl-calcu ，它可以转换为如下的矩阵计算问题。其中$\odot$表示“矩阵要素相乘”（也即对应矩阵元素直接相乘），注意不是“矩阵相乘”！

$$
\begin{alignedat}{3}
&&\boldsymbol{\eta}_m =
&&\boldsymbol{{\hat{\beta}}}_{(2,m)}\odot &&\boldsymbol{g}_m \\
&&_{(1\times7)} =
&&_{(1\times7)}  \odot &&_{(1\times7)} 
\end{alignedat}
$$


$$
\begin{alignedat}{3}
  \begin{pmatrix}
    \eta_1\\
    \eta_2\\
    \eta_3\\
    \eta_4\\
    \eta_5\\
    \eta_6\\
    \eta_7
  \end{pmatrix}
=
  \begin{pmatrix}
    \hat{\beta}_{21}\\
    \hat{\beta}_{12}\\
    \hat{\beta}_{23}\\
    \hat{\beta}_{24}\\
    \hat{\beta}_{25}\\
    \hat{\beta}_{26}\\
    \hat{\beta}_{27}
  \end{pmatrix}
 \odot
 \begin{pmatrix}
    g_1\\
    g_2\\
    g_3\\
    g_4\\
    g_5\\
    g_6\\
    g_7
  \end{pmatrix}
  =
  \begin{pmatrix}
    \hat{\beta}_{21}\\
    \hat{\beta}_{12}\\
    \hat{\beta}_{23}\\
    \hat{\beta}_{24}\\
    \hat{\beta}_{25}\\
    \hat{\beta}_{26}\\
    \hat{\beta}_{27}
  \end{pmatrix}
 \odot
 \begin{pmatrix}
    \frac{X_0}{Y_0}\\
    \frac{X_0}{Y_0}\\
    1\\
    X_0\\
    \frac{1}{Y_0}\\
    -\frac{1}{X_0Y_0}\\
    -\frac{1}{X_0}
  \end{pmatrix}
= 
\begin{pmatrix}
    \hat{\beta}_{21}\frac{X_0}{Y_0}\\
    \hat{\beta}_{12}\frac{X_0}{Y_0}\\
    \hat{\beta}_{23}\\
    \hat{\beta}_{24} X_0\\
    \hat{\beta}_{25}\frac{1}{Y_0}\\
    -\hat{\beta}_{26}\frac{1}{X_0Y_0}\\
    -\hat{\beta}_{27}\frac{1}{X_0}
  \end{pmatrix}
\end{alignedat}
$$


请在EViews中计算得到7个模型中$Y_i$对$X_i$的点弹性$\eta_m\quad (m=1,2,\ldots,7)$。请参考计算 @tbl-calcu  。分步骤回答如下问题：

（1）（步骤1）首先，你需要根据给定的数据点$(X_0,Y_0)=(100,30)$，构建1个$(7 \times 1)$的向量对象![](../pic/object/Vector.png)，保存并命名为`g_m`，用于存放计算常数量值（参看计算 @tbl-calcu 和上述提示）。 请将常数向量对象![](../pic/object/Vector.png)`g_m`的结果复制或截图到如下空白处。

> **温馨提示**：在EViews命令窗口中，运行如下代码`vector(7) g_m(1)=100/30`，可以给$(7 \times 1)$的向量对象![](../pic/object/Vector.png)`g_m`赋值第1个元素值为$100/30=`r round(100/30,4)`$。向量其他元素的赋值方法可进行类似操作！

答：

<br>

<br>

（2）（步骤2）：然后，利用矩阵要素相乘的方法（参看计算 @tbl-calcu 和上述提示），构建并计算1个$(7 \times 1)$的向量对象![](../pic/object/Vector.png)，保存并命名为`eta_point`，用于存放点弹性的计算量值（参看计算 @tbl-calcu ）。 请将向量对象![](../pic/object/Vector.png)`eta_point`的结果复制或截图到如下空白处。

> **温馨提示**：在EViews命令窗口中输入如下代码`vector(7) eta_point=@emult(beta2_hat, g_m)`，可以得到最终结果。其中`@emult()`命令表示“矩阵元素相乘”($\odot$)。


答：

<br>

<br>


## 题目`r n_task()`：计算平均弹性

根据前面的EViews回归分析结果，根据样本数据$(X_i,Y_i)$，分别计算各模型$Y_i$对$X_i$的平均弹性$\overline{\eta}_m \quad (m=1,2,\ldots,7)$。

> **温馨提示**：我们可以利用矩阵计算，一次性算出所有的点斜率向量![](../pic/object/Vector.png)$\boldsymbol{\overline{\eta}}_{(7\times1)}$。关键在于准确得到两个向量：回归方程的斜率向量$\boldsymbol{{\hat{\beta}}}_{(2,m)}$，以及常数向量$\boldsymbol{\bar{g}}_m$。根据点斜率计算 @tbl-calcu ，它可以转换为如下的矩阵计算问题。其中$\odot$表示“矩阵要素相乘”（也即对应矩阵元素直接相乘），注意不是“矩阵相乘”！

$$
\begin{alignedat}{3}
&&\boldsymbol{\overline{\eta}}_m =
&&\boldsymbol{{\hat{\beta}}}_{(2,m)}\odot &&\boldsymbol{\bar{g}}_m \\
&&_{(1\times7)} =
&&_{(1\times7)}  \odot &&_{(1\times7)} 
\end{alignedat}
$$


$$
\begin{alignedat}{3}
  \begin{pmatrix}
    \overline{\eta}_1\\
    \overline{\eta}_2\\
    \overline{\eta}_3\\
    \overline{\eta}_4\\
    \overline{\eta}_5\\
    \overline{\eta}_6\\
    \overline{\eta}_7
  \end{pmatrix}
=
  \begin{pmatrix}
    \hat{\beta}_{21}\\
    \hat{\beta}_{12}\\
    \hat{\beta}_{23}\\
    \hat{\beta}_{24}\\
    \hat{\beta}_{25}\\
    \hat{\beta}_{26}\\
    \hat{\beta}_{27}
  \end{pmatrix}
 \odot
 \begin{pmatrix}
    \bar{g}_1\\
    \bar{g}_2\\
    \bar{g}_3\\
    \bar{g}_4\\
    \bar{g}_5\\
    \bar{g}_6\\
    \bar{g}_7
  \end{pmatrix}
  =
  \begin{pmatrix}
    \hat{\beta}_{21}\\
    \hat{\beta}_{12}\\
    \hat{\beta}_{23}\\
    \hat{\beta}_{24}\\
    \hat{\beta}_{25}\\
    \hat{\beta}_{26}\\
    \hat{\beta}_{27}
  \end{pmatrix}
 \odot
 \begin{pmatrix}
    \frac{\bar{X}}{\bar{Y}}\\
    \frac{\bar{X}}{\bar{Y}}\\
    1\\
    \bar{X}\\
    \frac{1}{\bar{Y}}\\
    -\frac{1}{\bar{X}\bar{Y}}\\
    -\frac{1}{\bar{X}}
  \end{pmatrix}
= 
\begin{pmatrix}
    \hat{\beta}_{21}\frac{\bar{X}}{\bar{Y}}\\
    \hat{\beta}_{12}\frac{\bar{X}}{\bar{Y}}\\
    \hat{\beta}_{23}\\
    \hat{\beta}_{24} \bar{X}\\
    \hat{\beta}_{25}\frac{1}{\bar{Y}}\\
    -\hat{\beta}_{26}\frac{1}{\bar{X}\bar{Y}}\\
    -\hat{\beta}_{27}\frac{1}{\bar{X}}
  \end{pmatrix}
\end{alignedat}
$$


请在EViews中计算得到7个模型中$Y_i$对$X_i$的点弹性$\overline{\eta}_m\quad (m=1,2,\ldots,7)$。请参考计算 @tbl-calcu  。分步骤回答如下问题：

（1）（步骤1）首先，你需要根据给定的数据点$(X_i,Y_i)$算出均值点$(\bar{X},\bar{Y})$，构建1个$(7 \times 1)$的向量对象![](../pic/object/Vector.png)，保存并命名为`g_m_bar`，用于存放计算常数量值（参看计算 @tbl-calcu 和上述提示）。 请将常数向量对象![](../pic/object/Vector.png)`g_m_bar`的结果复制或截图到如下空白处。

> **温馨提示**：在EViews命令窗口中，运行如下代码`vector(7) g_m_bar(1)=x_bar/y_bar`，可以给$(7 \times 1)$的向量对象![](../pic/object/Vector.png)`g_m`赋值第1个元素值为$\frac{\bar{X}}{\bar{Y}}$。向量其他元素的赋值方法可进行类似操作！

答：

<br>

<br>

（2）（步骤2）：然后，利用矩阵要素相乘的方法（参看计算 @tbl-calcu 和上述提示），构建并计算1个$(7 \times 1)$的向量对象![](../pic/object/Vector.png)，保存并命名为`eta_mean`，用于存放点弹性的计算量值（参看计算 @tbl-calcu ）。 请将向量对象![](../pic/object/Vector.png)`eta_mean`的结果复制或截图到如下空白处。

> **温馨提示**：在EViews命令窗口中输入如下代码`vector(7) eta_mean=@emult(beta2_hat, g_m_mar)`，可以得到最终结果。其中`@emult()`命令表示“矩阵元素相乘”($\odot$)。


答：

<br>

<br>